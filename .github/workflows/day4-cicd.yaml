name: nishali app containerization pipelinbe

#Trigger section
on:
  push:
    branches:
      - "dev"

#Jobs
jobs:
  nish-image-build:
    runs-on: ubuntu-latest
    steps:
      - name: run some basic commands on above server to do some verifications
        run: |
          uname -r
          whoami
          cat /etc/os-release
          docker version
          docker-compose version
          #sonarqube-scanner --version

      - name: using pre-designed github workflow to get copy gitrepo code to runner machine
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2.1.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        with:
          projectBaseDir: ./python-app-secret
          args: >
            -Dsonar.projectKey=nishali-project
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: verify github code and use docker compose to build and create
        run: |
          ls -a 
          cd python-app-secret 
          docker-compose up -d 
          sleep 2
          docker-compose ps 
          sleep 1
          docker-compose logs

      - name: Build an image from Dockerfile
        run: |
          cd python-app-secret
          docker build -t docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nishalipython:bmov${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nishalipython:bmov${{ github.sha }}'
          format: 'table'
          exit-code: '0' # exit code non zero terminate pipeline
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: try to login from runner to docker hub account 
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: pushing image to docker hub 
        run: |
          echo "please wait while image is getting pushed"
          docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nishalipython:bmov${{ github.sha }}

      - name: installing node 20 
        uses: actions/setup-node@v2 
        with:
          node-version: '20'

      - name: install npm modules for ecs 
        run: |
          node -v 
          cd nishali-ecs
          npm install 

      - name: setup aws login details 
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: cdk deploy ecs code 
        run: |
          cd nishali-esc 
          npx cdk bootstrap 
          npx cdk deploy --no-rollback --require-approval never 